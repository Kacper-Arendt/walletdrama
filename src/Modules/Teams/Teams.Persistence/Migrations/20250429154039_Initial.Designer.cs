// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Teams.Persistence;

#nullable disable

namespace Teams.Persistence.Migrations
{
    [DbContext(typeof(TeamsDbContext))]
    [Migration("20250429154039_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Teams")
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Teams.Domain.Entities.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId")
                        .HasDatabaseName("IX_Teams_OwnerId");

                    b.ToTable("Teams", "Teams");
                });

            modelBuilder.Entity("Teams.Domain.Entities.TeamInvitation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TeamId")
                        .HasDatabaseName("IX_TeamInvitations_TeamId");

                    b.HasIndex("UserId")
                        .HasDatabaseName("IX_TeamInvitations_UserId");

                    b.HasIndex("TeamId", "UserId")
                        .IsUnique()
                        .HasDatabaseName("UQ_TeamInvitations_TeamId_UserId");

                    b.ToTable("TeamInvitations", "Teams");
                });

            modelBuilder.Entity("Teams.Domain.Entities.TeamMember", b =>
                {
                    b.Property<Guid>("MemberId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MemberId");

                    b.HasIndex("TeamId")
                        .HasDatabaseName("IX_TeamMembers_TeamId");

                    b.HasIndex("TeamId", "UserId")
                        .IsUnique()
                        .HasDatabaseName("UQ_TeamMembers_TeamId_UserId");

                    b.ToTable("TeamMembers", "Teams");
                });

            modelBuilder.Entity("Teams.Domain.Entities.TeamMember", b =>
                {
                    b.HasOne("Teams.Domain.Entities.Team", null)
                        .WithMany("Members")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Teams.Domain.Entities.Team", b =>
                {
                    b.Navigation("Members");
                });
#pragma warning restore 612, 618
        }
    }
}
